@page "/beispiele/bibliothek/details/author/{Id:int}"
@using ct_datenbanken.Data
@using Microsoft.EntityFrameworkCore
@inject LibraryDbContext db
@inject NavigationManager NavigationManager
@inject BookService bs

<h1>@author.Name</h1>
<h3>hat @author.Books.Count registrierte Bücher</h3>


<table>
    <thead>
    <tr>
        <th scope="col">Titel</th>
        <th scope="col">Seitenanzahl</th>
        <th scope="col">Author</th>
        <th scope="col">Editieren</th>
        <th scope="col">Details</th>
        <th scope="col">Leihen/Zurückgeben</th>
        <th scope="col">Löschen</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var book in author.Books.OrderBy(x => x.Title).Take(50))
    {
        <tr>
            <th scope="row">@book.Title</th>
            <td>@book.PageCount</td>
            <td><a class="btn btn-outline-info" role="button" href="/beispiele/bibliothek/edit/@book.Id">Hier</a></td>
            <td><a class="btn btn-outline-info" role="button" href="/beispiele/bibliothek/details/book/@book.Id">Hier</a></td>
            @if (book.IsAvailable)
            {
                <td><a class="btn btn-outline-success" role="button" @onclick="@(e => { bs.ToggleAvailability(book.Id); })">Leihen</a></td>
            }
            else
            {
                <td><a class="btn btn-outline-danger" role="button" @onclick="@(e => { bs.ToggleAvailability(book.Id); })">Zurückgeben</a></td>
            }
            <td><a class="btn btn-danger" role="button" @onclick=@(e => { bs.Delete(book.Id); })>Löschen</a></td>
        </tr>
    }
    </tbody>
</table>

@code{

    [Parameter]
    public int Id { get; set; }

    private Author author;

    protected override void OnInitialized()
    {
        author = db.Authors.Where(x => x.Id == Id).Include(x => x.Books).SingleOrDefault();
        
        if (author is null)
            NavigationManager.NavigateTo("/beispiele/bibliothek/");
    }
}